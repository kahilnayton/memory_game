[{"/Users/Kahil/Desktop/codeProjects/memory_game/src/reportWebVitals.js":"1","/Users/Kahil/Desktop/codeProjects/memory_game/src/MemoryGame.js":"2","/Users/Kahil/Desktop/codeProjects/memory_game/src/Card.js":"3","/Users/Kahil/Desktop/codeProjects/memory_game/src/index.js":"4","/Users/Kahil/Desktop/codeProjects/memory_game/src/Navbar.js":"5"},{"size":362,"mtime":1606920220547,"results":"6","hashOfConfig":"7"},{"size":4354,"mtime":1607274303580,"results":"8","hashOfConfig":"7"},{"size":596,"mtime":1607273322510,"results":"9","hashOfConfig":"7"},{"size":198,"mtime":1607028547763,"results":"10","hashOfConfig":"7"},{"size":340,"mtime":1607028490015,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1nsumpr",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},"/Users/Kahil/Desktop/codeProjects/memory_game/src/reportWebVitals.js",[],"/Users/Kahil/Desktop/codeProjects/memory_game/src/MemoryGame.js",[],"/Users/Kahil/Desktop/codeProjects/memory_game/src/Card.js",["25"],"import React from 'react'\nimport PropTypes from 'prop-types';\nimport {useSpring, animated} from 'react-spring'\n\nconst Card = (props) => {\n  const { x } = useSpring({\n    from: { x: 0 },\n    to: { x: 1 }\n  });\n  let style = {}\n  if (props.showing) {\n    style.backgroundColor = props.backgroundColor;\n  }\n  return (\n    <animated.div\n      onClick={props.onClick}\n      className=\"card-container\"\n      style={style}\n    />\n  )\n}\n\nCard.propTypes = {\n  showing: PropTypes.bool.isRequired,\n  backgroundColor: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired\n}\n\n\nexport default Card;","/Users/Kahil/Desktop/codeProjects/memory_game/src/index.js",[],["26","27"],"/Users/Kahil/Desktop/codeProjects/memory_game/src/Navbar.js",["28","29"],"import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Navbar = ({onNewGame}) => {\n  return (  \n    <header>\n      <h2><a>Memory Game</a></h2>\n      <nav>\n        <li><a onClick={onNewGame}>New Game</a></li>\n      </nav>\n    </header>\n  )\n}\n\nNavbar.propTypes = {\n  onNewGame: PropTypes.func.isRequired\n}\n\nexport default Navbar\n",{"ruleId":"30","severity":1,"message":"31","line":6,"column":11,"nodeType":"32","messageId":"33","endLine":6,"endColumn":12},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":7,"column":11,"nodeType":"40","endLine":7,"endColumn":14},{"ruleId":"38","severity":1,"message":"39","line":9,"column":13,"nodeType":"40","endLine":9,"endColumn":36},"no-unused-vars","'x' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["41"],"no-negated-in-lhs",["42"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]